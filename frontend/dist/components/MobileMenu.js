import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Fragment } from 'react';
import { Dialog, Transition } from '@headlessui/react';
import { Link, useLocation } from 'react-router-dom';
import { navigation } from './Sidebar';
import clsx from 'clsx';
export default function MobileMenu({ isOpen, setIsOpen }) {
    const location = useLocation();
    return (_jsx(Transition.Root, { show: isOpen, as: Fragment, children: _jsxs(Dialog, { as: "div", className: "relative z-50 lg:hidden", onClose: setIsOpen, children: [_jsx(Transition.Child, { as: Fragment, enter: "transition-opacity ease-linear duration-300", enterFrom: "opacity-0", enterTo: "opacity-100", leave: "transition-opacity ease-linear duration-300", leaveFrom: "opacity-100", leaveTo: "opacity-0", children: _jsx("div", { className: "fixed inset-0 bg-gray-900/80" }) }), _jsx("div", { className: "fixed inset-0 flex", children: _jsx(Transition.Child, { as: Fragment, enter: "transition ease-in-out duration-300 transform", enterFrom: "-translate-x-full", enterTo: "translate-x-0", leave: "transition ease-in-out duration-300 transform", leaveFrom: "translate-x-0", leaveTo: "-translate-x-full", children: _jsx(Dialog.Panel, { className: "relative mr-16 flex w-full max-w-xs flex-1", children: _jsxs("div", { className: "flex grow flex-col gap-y-5 overflow-y-auto bg-gray-900 px-6 pb-4", children: [_jsx("div", { className: "flex  h-16  items-center", children: _jsx("img", { className: "h-8 w-auto", src: "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRp3k7MVRHVPxRZfY8LXE7nWsKEfN2Fxsgv6g&s", alt: "ActiveHub" }) }), _jsx("nav", { className: "flex flex-1 flex-col", children: _jsx("ul", { role: "list", className: "flex flex-1 flex-col gap-y-7", children: _jsx("li", { children: _jsx("ul", { role: "list", className: "-mx-2 space-y-1", children: navigation.map((item) => (_jsx("li", { children: _jsxs(Link, { to: item.href, className: clsx(location.pathname === item.href
                                                                ? 'bg-gray-800 text-white'
                                                                : 'text-gray-400 hover:text-white hover:bg-gray-800', 'group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold'), onClick: () => setIsOpen(false), children: [_jsx(item.icon, { className: "h-6 w-6 shrink-0", "aria-hidden": "true" }), item.name] }) }, item.name))) }) }) }) })] }) }) }) })] }) }));
}
