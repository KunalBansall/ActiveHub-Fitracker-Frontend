import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from "react";
import { useNavigate } from "react-router-dom";
import axios from "axios";
import { useForm } from "react-hook-form";
const API_URL = import.meta.env.VITE_API_URL || 'http://localhost:3000';
export default function SignUp() {
    const [error, setError] = useState("");
    const navigate = useNavigate();
    const { register, handleSubmit, formState: { errors }, } = useForm();
    const onSubmit = async (data) => {
        try {
            const response = await axios.post(`${API_URL}/auth/signup`, data);
            localStorage.setItem("token", response.data.token);
            localStorage.setItem("user", JSON.stringify(response.data));
            navigate("/");
        }
        catch (err) {
            setError(err.response?.data?.message || "An error occurred");
        }
    };
    return (_jsxs("div", { className: "min-h-screen bg-gray-50 flex flex-col justify-center py-8 sm:px-6 lg:px-8", style: {
            backgroundImage: "url(/Activehub04.jpeg)",
            backgroundSize: "cover",
            backgroundPosition: "center",
        }, children: [_jsx("div", { className: "sm:mx-auto sm:w-full sm:max-w-4xl", children: _jsx("h2", { className: "mt-2 text-center text-3xl sm:text-4xl font-extrabold text-outline text-white", children: "Register Your Gym" }) }), _jsx("div", { className: "mt-4 sm:mx-auto sm:w-full sm:max-w-4xl", children: _jsxs("div", { className: "bg-white bg-opacity-30 py-8 px-6 sm:px-8 shadow sm:rounded-lg", children: [error && (_jsx("div", { className: "mb-4 bg-red-50 border border-red-200 text-red-600 px-4 py-3 rounded", children: error })), _jsxs("form", { onSubmit: handleSubmit(onSubmit), className: "space-y-6", children: [_jsxs("div", { className: "grid grid-cols-1 gap-6 sm:grid-cols-3", children: [_jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700", children: "Username" }), _jsxs("div", { className: "mt-1", children: [_jsx("input", { ...register("username", { required: "Username is required" }), className: "appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500" }), errors.username && (_jsx("p", { className: "mt-1 text-sm text-red-600", children: errors.username.message }))] })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700", children: "Email address" }), _jsxs("div", { className: "mt-1", children: [_jsx("input", { ...register("email", {
                                                                required: "Email is required",
                                                                pattern: {
                                                                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}$/i,
                                                                    message: "Invalid email address",
                                                                },
                                                            }), className: "appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500" }), errors.email && (_jsx("p", { className: "mt-1 text-sm text-red-600", children: errors.email.message }))] })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700", children: "Password" }), _jsxs("div", { className: "mt-1", children: [_jsx("input", { type: "password", ...register("password", {
                                                                required: "Password is required",
                                                                minLength: {
                                                                    value: 6,
                                                                    message: "Password must be at least 6 characters",
                                                                },
                                                            }), className: "appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500" }), errors.password && (_jsx("p", { className: "mt-1 text-sm text-red-600", children: errors.password.message }))] })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700", children: "Gym Name" }), _jsxs("div", { className: "mt-1", children: [_jsx("input", { ...register("gymName", { required: "Gym name is required" }), className: "appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500" }), errors.gymName && (_jsx("p", { className: "mt-1 text-sm text-red-600", children: errors.gymName.message }))] })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700", children: "Gym Type" }), _jsxs("div", { className: "mt-1", children: [_jsxs("select", { ...register("gymType", { required: "Gym type is required" }), className: "appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500", children: [_jsx("option", { value: "", children: "Select a type" }), _jsx("option", { value: "Fitness Center", children: "Fitness Center" }), _jsx("option", { value: "CrossFit Box", children: "CrossFit Box" }), _jsx("option", { value: "Yoga Studio", children: "Yoga Studio" }), _jsx("option", { value: "Martial Arts", children: "Martial Arts" }), _jsx("option", { value: "Other", children: "Other" })] }), errors.gymType && (_jsx("p", { className: "mt-1 text-sm text-red-600", children: errors.gymType.message }))] })] }), _jsxs("div", { className: "col-span-3", children: [_jsx("label", { className: "block text-sm font-medium text-gray-700", children: "Gym Address" }), _jsxs("div", { className: "grid grid-cols-1 sm:grid-cols-2 gap-4", children: [_jsx("input", { ...register("gymAddress.street", { required: "Street is required" }), placeholder: "Street", className: "appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500" }), _jsx("input", { ...register("gymAddress.city", { required: "City is required" }), placeholder: "City", className: "appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500" })] }), _jsxs("div", { className: "grid grid-cols-1 sm:grid-cols-2 gap-4 mt-4", children: [_jsx("input", { ...register("gymAddress.state", { required: "State is required" }), placeholder: "State", className: "appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500" }), _jsx("input", { ...register("gymAddress.zipCode", { required: "ZIP code is required" }), placeholder: "ZIP Code", className: "appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500" })] })] })] }), _jsx("div", { children: _jsx("button", { type: "submit", className: "w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500", children: "Sign up" }) })] }), _jsx("div", { className: "mt-6 text-center", children: _jsxs("p", { className: "text-sm text-gray-600", children: ["Already a user?", " ", _jsx("button", { onClick: () => navigate("/signin"), className: "font-medium text-blue-600 hover:text-blue-500", children: "Sign in here" })] }) })] }) })] }));
}
